package com.food.aop;import java.lang.reflect.InvocationHandler;import java.lang.reflect.Method;import java.lang.reflect.Proxy;/** * Created by user on 16-11-13. */public class MyInvocationHandler implements InvocationHandler {    private Object target;    public MyInvocationHandler(Object target) {        this.target = target;    }    @Override    public Object invoke(Object proxy, Method method, Object[] args) throws Throwable {        //1.记录日志    2.时间统计开始      3.安全检查        Object retVal = method.invoke(target, args);        //4.时间统计结束        return retVal;    }    public static Object proxy(Object target) {        return Proxy.newProxyInstance(target.getClass().getClassLoader(),                target.getClass().getInterfaces(), new MyInvocationHandler(target));    }}