<?xml version="1.0" encoding="UTF-8"?><beans xmlns="http://www.springframework.org/schema/beans"       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"       xmlns:context="http://www.springframework.org/schema/context"       xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:aop="http://www.springframework.org/schema/aop"       xsi:schemaLocation="http://www.springframework.org/schema/beans        http://www.springframework.org/schema/beans/spring-beans-3.1.xsd        http://www.springframework.org/schema/context        http://www.springframework.org/schema/context/spring-context-3.1.xsd        http://www.springframework.org/schema/mvc        http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd">    <!-- 启动注解驱动的Spring MVC功能，注册请求url和注解POJO类方法的映射-->    <mvc:annotation-driven>        <mvc:message-converters>            <bean class="com.alibaba.fastjson.support.spring.FastJsonHttpMessageConverter" />        </mvc:message-converters>        <!--MyArgumentsResolver-->        <mvc:argument-resolvers>            <bean class="com.food.framework.web.support.resolver.JsonMethodArgumentResolver" />        </mvc:argument-resolvers>    </mvc:annotation-driven>    <!--proxy-target-class=true  使用cglib动态代理-->    <aop:aspectj-autoproxy />    <!-- 启动包扫描功能，以便注册带有@Controller、@service、@repository、@Component等注解的类成为spring的bean -->    <context:component-scan base-package="com.food"/>    <!-- 对模型视图名称的解析，在请求时模型视图名称添加前后缀 -->    <!--<bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">-->    <!--<property name="viewClass" value="org.springframework.web.servlet.view.JstlView"/>-->    <!--<property name="prefix" value="/"/>    &lt;!&ndash; 前缀 &ndash;&gt;-->    <!--<property name="suffix" value=".jsp"/>    &lt;!&ndash; 后缀 &ndash;&gt;-->    <!--</bean>-->    <bean id="viewResolver" class="org.springframework.web.servlet.view.freemarker.FreeMarkerViewResolver">        <!-- 增加property -->        <property name="cache" value="false"/>        <property name="suffix" value=".ftl"/>        <property name="prefix" value="/"/>        <property name="contentType" value="text/html;charset=UTF-8"/>        <property name="requestContextAttribute" value="rc"/>    </bean>    <bean id="freeMarkerConfig" class="org.springframework.web.servlet.view.freemarker.FreeMarkerConfigurer">        <!-- 增加自定义property -->        <property name="templateLoaderPath" value="/WEB-INF/Views"/>        <property name="defaultEncoding" value="UTF-8"/>        <!--模板设置-->        <property name="freemarkerSettings">            <props>                <prop key="template_update_delay">1800</prop>                <!--刷新模板的周期，单位为秒-->                <!-- <prop key="default_encoding">UTF-8</prop>&lt;!&ndash;模板的编码格式-->                <prop key="locale">zh_CN</prop>                <!--本地化设置-->                <prop key="number_format">0.######</prop>            </props>        </property>        <property name="freemarkerVariables">            <map>                <entry key="block" value-ref="block" />                <entry key="override" value-ref="override" />                <entry key="extends" value-ref="extends" />                <entry key="cssUrl" value="http://127.0.0.1:8011/styles"/>                <entry key="jsUrl" value="http://127.0.0.1:8011/scripts"/>            </map>        </property>    </bean>    <bean id="block" class="cn.org.rapid_framework.freemarker.directive.BlockDirective" />    <bean id="override" class="cn.org.rapid_framework.freemarker.directive.OverrideDirective" />    <bean id="extends" class="cn.org.rapid_framework.freemarker.directive.ExtendsDirective" />    <!-- 访问静态文件（jpg,js,css）的方法 -->    <mvc:resources location="/favicon.ico" mapping="/favicon.ico"/>    <mvc:resources location="/resources/files" mapping="/files/**"/>    <mvc:resources location="/resources/filesOut/" mapping="/filesOut/**"/>    <mvc:resources location="/resources/js/" mapping="/js/**"/>    <mvc:resources location="/resources/css/" mapping="/css/**"/>    <mvc:resources location="/resources/" mapping="/r/**"/>    <!--<mvc:resources location="/WEB-INF/Views/" mapping="/Views/**" />-->    <import resource="datasource.xml"/></beans>